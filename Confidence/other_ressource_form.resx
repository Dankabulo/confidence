<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>