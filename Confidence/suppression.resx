<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAACrhJREFUeF7tnc+PJkUZx8cf0ZMc8GeCQQN60MgB9SAeZL1IZrp7dNnU27OKiQkE
        jdHlX+CECWj0sF5E8C9YCARMjIInXTbghYTD/mDZefudgY3ZDVkug5vN+HzrfWre7p7qHzPTXf1Uv/VJ
        vtkfU9X9VD3PdFdVP129EggEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoGAZ8yOH//01kb03alKfpal8W8y
        lZzJVPyvbJK8Sf++kk3ia/T3/81Ff9f/Rz9DGZSlOqiLY+BYfNiAVGYPrn5xppKfztLoL+TQTdJux9rE
        sfU56Fx82sCQbKoffl3/dk/i8yVnudB5nBs2sDkBF7x3/Pjn6DL92GwSv2FxyiDStpBNsI3NDHTN9oNr
        X5pNoj9Sh++UHSBIO7ARtrLZgaOSnYi/Sh37DOlmrqOlC7Y+A9u5GYGDcvEnq7fRPfYP1JG3ch3rm26h
        DWgLNyvQxO7KykemabRBU7JtS4ceTGl8ge7PL9CfT9LU7uHpZO17dOxv4BKdqQduf0upT0D4O/4PP0MZ
        lEUdrnvBeuwDKdmeqjhF27iZARvaCZP47/ZObKE0fpv+fBoBdPnk+uf5sEcGx5pOkpM4Np/Dfv4GoW1h
        fFDBVEXr1EnXy53WJPotfY+c8/vtNPkmH6p3cC6cE+e22dSg61uTOOFDBXAJnqXx7ywd1aRXSGu7x459
        nA/lHJwbNtAl/tWcXa2ENqPtfKjlBJdWut++ZuugaiUvzdLkO3wIMcxUfB9ss9tcqbNLu3YwTVfvpg67
        ZOkUuyhQphtr3+bqYoGNZO+5ffZXKrmEvuDqywHuodT4q/s7w6prMxU96tMIevfxxz9KV6mfw/ZSW6p0
        dWtj/V6uPm6yjfgYNfiDUgfYpZIz2yeTz3BV74Dt1I7n9rXLrhvU3vu56jjh3/w2zt/JVPwrruY9WRr9
        mtr0YamNNt0Y7ZVgfs9vcdmnebbLKZ0rNlX0rTZrCJhabp6I7uJq40CP9lsM+Kjxb7yrVj/L1UYHRvzT
        SfwfW9uLSi51uZA1KPOl1hZTPRX/47/r65/iaqMFbaT2Yg3D3g8LnR3FOkHLRZ7nlmlR5OLq6iepzc+X
        +mCfZpPkt1zFT3h519q4PdFv/jKuiHEQNF4JvF021k/cGtb2cc9fhst+FWh7izHB9W2V3MlV/EA/0m16
        qkcj4jEP+NqiU9waZgfoS68eJePZt60hOe00TfXmg8f4r7NJ9H3+L6+4kkZfo3b+u00yiJ4iNqwT0Hhg
        wsVlozN5mpI5GhZ5tPMX90fk2XkVBHPnJ+/P7Y/eahMEvFhU7KeCkm0vMovocoY0LksDWCo5w0UroXJ/
        KtXzJgiKzmep+G/841rQN4V6JSEHgYvKhBM463L4rrVZ2y9dAYzEB4HV+S2vAABjIqpTN3C+lan1r3Bx
        eZCByN61Ga6FJ2RctBHfguCozjfQzOgXxWOUlEZ/5qKy4Glfdeq2Sl7DY1Iu3gpfgqAr5wP0EdWvyye4
        KXJaSE7BSxs2g7UOm8whPQi6dL6Bk0pyx9un01xUBnouS04pGZlT8hIXPRRSg6AP5xvoWC8Xj1vQjqhU
        MhrlPmYxck9d5PBJC4I+nQ/mOYb5Y5eVnOKiw4MlXbuRWq9wsSMjJQj6dr6BzlGdbayS17nYsOhXtG0G
        LrTGRTth6CBw5XwwU1FUPE9RsIWLDkc2fz/faiCyW3aV+hgX7YyhgsCl8wG/d1CZRTWdxE9w0eEgQyo3
        Z+hz5cp1ELh2vqFhZfU8FxsGbJViMWpPfef2uQqCoZwP+EFR7rwlqfgOLuoe7JdjNQpK47e5WK/0HQRD
        Ot9A57xcPH9e0UNczD28IZPFKK2nuVjv9BUEEpwPsPxbtGEhGmc9y8XcQwZU7saFV7S5mBO6DgIpzgf8
        anrOjpzS+AoXcwv2zrMaxBpipaqrIJDkfDBPq8/bUhQXcws2ULQZo5XGF7iYc44aBNKcb0CfFm1aiIu4
        Re/AaTEGovvSC1xsEA4bBFKdD2jO/2LRroW4iFsoIisXgOhnT3KxwThoEEh2PiBbnirathAXcUtt+pJK
        HuZig9I2CKQ7H2Rp8kjRvoW4iFsyvfGy3SDstMXFBqcpCHxwPtC7lxVsXIiLuIU67U2bMRC2W+NiIqgK
        gmma/NIH54NMrd1TtHMhLuIWzD9txkASt0KrCIKSZDofvLPxoy/bbR7sClCz/Yl64HYuJor6IJDrfFC3
        7sJF3EKXTnxowWoQOpqLicN+z2+/TjAUHLx5m/fERdziYwBUON9IdBAIDAC/bgENzjcSGwTybgEeDQKr
        pnr8Jk7jOoEEBA4C/ZgGNs3zKwaG4oJA3jTQg4WgJucbfAgCeQtBwpeC2zrfID0I5C0FC34YdFDnGyQH
        Adkv62GQ1MfBh3W+QWoQiHscLDEh5KjON0gMAvRpyZ49cRG3SEsJ68r5BklBIDIlDNDJRSSFdu18g5Qg
        EJkUCiSkhfflfIOEIBCbFj70iyF9O98wdBDQuYS+GDLgq2GunG8YKghEvxoGyAjnL4e6dr5hiCCgK6nc
        l0MBGej09fChnG9wGQRevB7ucoOIoZ1vcBUEXmwQAeg3vfctYqQ43+AiCKi98reIAY2bRKn4Pi56KKQ5
        39BnENSutGoJ2iSqz23ipDrf0FcQ0DH82SYOUIM73yhSuvMNXQeBdxtFgsatYifxuYNsFeuL8w1dBYG3
        W8UCMq6TzaJ9c76hiyCgAbWfm0WDrraL3z+olO98gy0I2i6Ieb9dPGhYucL0pfGDEWARBP4435APgoOs
        hlL52u8M97Wy2ilwFl2+j/TJGMM0TX7gm/MNCAJ8No//2UjzJ2PiLW/6oouPRi0To/poFNht+dk4cXPZ
        AdBrKGP7bBwIH45sZrQfjjS0+nQsDZbwGVWusjTMPx1bs9bP8vbTsYaWH49+HoMmrjJ6lubj0UBPicLn
        4/dAG6m95cUim8bx+XgwT2tOLlkaWRDGBGMeGKJtLe750MXR9cM0Xb2bGlaZ3bInGhFjWsTVRoOe6jWM
        9iFkUW2eiO7iauMCc39q5AflRlv0IRZGuJr30NXvlG6Tva153djaWL+Xq42TbCM+hoaWGm6XSs60eXYg
        FV7br13ezekGtfd+rjpu+ErQfDuY6xqeIh70q6NDAlv5qV7tOogRLvuj/80vMx8TNA8Mczp32K+PuoST
        Oeqe55d1cbT3/Cb4pcezpQ5p0stHzTHsA87hq0vjsuns0i+HY66LBQ9L5zQoeRVp08id50M5B+fWqdsq
        /qfdxmqhzcu0+NUILxu3umeWdBU5CC6njjylQ95D23FMXte9X97tCzxAanyKWK/LSJnC69S4vfBhj8w7
        au0LNEL/Mb+lW/OiZr3QNm8f7LhCP0rW+QQNSSVtlMYXqNNfzLC/Tpo8onfaUmv3YM89bHCBS7C+BdHf
        9T589DNdRm/IFD2l69bszNFeyTae53v3SHdIkP2CFCjqwLocQ+m6hTb4mtUkAiRB8qW3LuVcmm5qm6Un
        cPoEJ5icJtW8gTS4YNvpcJ/vEZ1ChbV1lbxe6vzhpG1JTi39nN41eIGEBmpPkBMqN6noUedxbtjA5gSG
        JFPxHTRyf2g2iZ+lkXvlTuaHFh1TH5vOgXPxaQOBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQEAcKyv/B91s
        uBuA4geKAAAAAElFTkSuQmCC
</value>
  </data>
</root>