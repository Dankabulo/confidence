<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>