<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>